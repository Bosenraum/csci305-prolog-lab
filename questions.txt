Austin Rosenbaum
CSCI 305 Prolog Lab

NOTE: I've removed the semicolons and periods for clarity

1. 	X = 'King George VI'

2. 	X = 'Queen Mary'

3. 	X = 'King George V'

4. 	X = 'King George V'
		X = 'Queen Mary'

5. 	X = 'Prince William'
		X = 'Prince Henry'

6.	X = 'Princess Margaret'

7.	X = 'Prince Charles'
		X = 'Prince Andrew'
		X = 'Prince Edward'

8.	X = 'Princess Anne'

9.	false (Lady Diana spencer has no aunt's in this dataset, also the by marriage addition does not give her the same aunt as her husband)

10.	X = 'Catherine Middleton'

11.	X = 'Prince Charles'
		X = 'Lady Diana Spencer'
		X = 'Queen Elizabeth II'
		X = 'Prince Philip'
		X = 'King George VI'
		X = 'Lady Elizabeth Bowes-Lyon'
		X = 'King George V'
		X = 'Queen Mary'
		X = 'King Edward VII'
		X = 'Princess Alexandra of Denmark'
		X = 'Prince Albert'
		X = 'Queen Victoria'

12. false (She is the first generation tracked by the dataset)

13.	false (Henry born 1984, William born 1982 and both living.)

14.	false (No one is older than Queen Elizabeth II)

15.	X = 'King George V'

16.	I enjoy how Prolog 'figures' out the answers you want itself. It reminds me a lot of SQL (or I'm sure any database language), in that the actual programming is fairly minimal but the results can be powerful.

17.	Prolog feels very strange as a language to me and it may just be that I'm not used to it fully but it feels odd. Some things make complete sense with it while others feel like a total mystery.

18.	This lab was interesting because it was fairly quick and the results are pretty satisfying. With a dataset so small it is simple to check basic answers but the extended relationships quickly make Prolog's use apparent.

19.	I spent about 2 hours on this lab.

20.	I do not see myself going out of my way to use Prolog in the future, but if I was working on a project that required database scripting of some sort it could definitely come in handy.

EC1.	X = 'Viscount Linley'
			X = 'Lady Sarah Chatto'

EC2.	X = 'Viscount Linley'
			X = 'Lady Sarah Chatto'

(This yields the same results since the cousin rule is reciprocal so the ordering of the cousins does not matter)
